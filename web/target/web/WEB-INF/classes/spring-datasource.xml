<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:p="http://www.springframework.org/schema/p"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
					http://www.springframework.org/schema/beans/spring-beans.xsd
					http://www.springframework.org/schema/aop
					http://www.springframework.org/schema/aop/spring-aop.xsd
					http://www.springframework.org/schema/context
					http://www.springframework.org/schema/context/spring-context.xsd
					http://www.springframework.org/schema/tx
					http://www.springframework.org/schema/tx/spring-tx.xsd
">
    <!--加密使用-->
    <bean id="propertyConfig" class="com.jhl.security.PropertyDecipher">
        <property name="locations">
            <list>
                <value>classpath:DBConfig.properties</value>
				<value>classpath:trans_order_rule.properties</value>
				<!--<value>classpath:ccb_config.properties</value>-->
            </list>
        </property>
    </bean>

    <!--ms后台配置库数据源-->
    <bean id="db_platform" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${service.DataSource.jdbc.driverClassName}"></property>
		<property name="url" value="${service.DataSource.jdbc.url}"></property>
		<property name="username" value="${service.DataSource.jdbc.username}"></property>
		<property name="password" value="${service.DataSource.jdbc.password}"></property>
		<!--连接池初始化值 -->
		<property name="initialSize" value="1"></property>
		<!--连接池最大值 -->
		<property name="maxActive" value="500"></property>
		<!--最大空闲值，当经过一高峰期，慢慢释放连接，直到达到maxIdle -->
		<property name="maxIdle" value="2"></property>
		<!--最小空闲值，当空闲连接少于阀值时，连接池会预申请一些连接 -->
		<property name="minIdle" value="2"></property>
	</bean>

    <!--cdk数据源-->


	<!--动态数据源 -->
	<bean id="dataSource" class="com.jhl.db.datasource.DynamicDataSource">
		<property name="targetDataSources">
			<map>
				<entry key="db_service" value-ref="db_platform" />
			</map>
		</property>
		<property name="defaultTargetDataSource" ref="db_platform" />
	</bean>

	<bean id="myTxManager"
		  class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 注解方式配置事物 在service中@Transactional -->
	<!--<tx:annotation-driven transaction-manager="transactionManager" /> -->

	<tx:advice id="webTxAdvice" transaction-manager="myTxManager">
		<tx:attributes>
			<!-- 需要多个service协同操作，并需要事务支持的均以doxxx开头-->
			<tx:method name="do*" propagation="REQUIRED" read-only="false"
					   rollback-for="java.lang.Exception"/>
			<tx:method name="delete*" propagation="REQUIRED" read-only="false"
					   rollback-for="java.lang.Exception"/>
			<tx:method name="insert*" propagation="REQUIRED" read-only="false"
					   rollback-for="java.lang.Exception" />
			<tx:method name="update*" propagation="REQUIRED" read-only="false"
					   rollback-for="java.lang.Exception" />
			<tx:method name="synUpdate*" propagation="REQUIRED" read-only="false"
					   rollback-for="java.lang.Exception" />
			<tx:method name="save*" propagation="REQUIRED" read-only="false"
					   rollback-for="java.lang.Exception" />
		</tx:attributes>
	</tx:advice>

	<!-- 事务处理 -->
	<aop:config>
		<aop:pointcut id="pc" expression="execution(* com.jhl.service.*.*(..))" />
		<aop:advisor pointcut-ref="pc" advice-ref="webTxAdvice" />
	</aop:config>

	<!--<tx:annotation-driven transaction-manager="myTxManager"></tx:annotation-driven>-->

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate" p:dataSource-ref="dataSource"  />
</beans>